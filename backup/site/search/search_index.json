{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Python Flask Application (Version 1) \u00b6 Aplicaci\u00f3n web Flask con despliegue automatizado usando Helm Charts y ArgoCD. \ud83c\udfaf Descripci\u00f3n \u00b6 Esta es una versi\u00f3n alternativa de la aplicaci\u00f3n Python Flask, configurada con: Helm Charts : Para gesti\u00f3n de configuraciones ArgoCD : Para despliegue GitOps M\u00faltiples entornos : Dev, Staging, Production Monitoreo : Integraci\u00f3n con Prometheus y Grafana \ud83d\udccb API Endpoints \u00b6 GET /api/v1/info \u00b6 Endpoint que devuelve informaci\u00f3n del sistema y timestamp actual. Funcionalidad: - Muestra fecha y hora actual - Hostname del contenedor/pod - Mensaje de confirmaci\u00f3n - Informaci\u00f3n de deployment Respuesta esperada: 1 2 3 4 5 6 { \"time\" : \"02:30:45PM on August 25, 2025\" , \"hostname\" : \"python-app-1-1-pod-abc123\" , \"message\" : \"You are doing great, little human! <3\" , \"deployed_on\" : \"kubernetes\" } GET /api/v1/healthz \u00b6 Health check endpoint para Kubernetes liveness y readiness probes. Funcionalidad: - Verifica que la aplicaci\u00f3n est\u00e9 funcionando - Usado por Kubernetes para health checks - Endpoint cr\u00edtico para disponibilidad Respuesta esperada: 1 2 3 { \"status\" : \"up\" } \ud83d\ude80 Acceso a la Aplicaci\u00f3n \u00b6 URLs de Entornos \u00b6 Development : python-app-1-1-dev.test.com Staging : python-app-1-1-staging.test.com Production : python-app-1-1.test.com Ejemplos de Uso \u00b6 1 2 3 4 5 6 7 8 # Test del health check curl https://python-app-1-1.test.com/api/v1/healthz # Obtener informaci\u00f3n del sistema curl https://python-app-1-1.test.com/api/v1/info # Con headers JSON curl -H \"Accept: application/json\" https://python-app-1-1.test.com/api/v1/info | jq \u2699\ufe0f Configuraci\u00f3n con Helm \u00b6 Estructura de Charts \u00b6 1 2 3 4 5 6 7 8 9 10 11 charts/ \u251c\u2500\u2500 python-app-1/ \u2502 \u251c\u2500\u2500 Chart.yaml \u2502 \u251c\u2500\u2500 values.yaml \u2502 \u2514\u2500\u2500 templates/ \u2502 \u251c\u2500\u2500 deployment.yaml \u2502 \u251c\u2500\u2500 service.yaml \u2502 \u251c\u2500\u2500 ingress.yaml \u2502 \u2514\u2500\u2500 _helpers.tpl \u2514\u2500\u2500 argocd/ \u2514\u2500\u2500 values-argo.yaml Values por Entorno \u00b6 Development \u00b6 1 2 3 4 5 6 7 8 9 replicaCount : 1 image : tag : \"dev\" resources : requests : cpu : 100m memory : 128Mi ingress : host : python-app-1-1-dev.test.com Production \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 replicaCount : 3 image : tag : \"latest\" resources : requests : cpu : 200m memory : 256Mi limits : cpu : 500m memory : 512Mi ingress : host : python-app-1-1.test.com Despliegue con Helm \u00b6 1 2 3 4 5 6 7 8 9 10 # Instalar en desarrollo helm install python-app-1-1-dev ./charts/python-app-1 \\ -f charts/python-app-1/values-dev.yaml \\ -n python-app-1-1-dev \\ --create-namespace # Upgrade en producci\u00f3n helm upgrade python-app-1-1 ./charts/python-app-1 \\ -f charts/python-app-1/values-prod.yaml \\ -n python-app-1-1-prod \ud83d\udd04 GitOps con ArgoCD \u00b6 Configuraci\u00f3n de Aplicaci\u00f3n ArgoCD \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 apiVersion : argoproj.io/v1alpha1 kind : Application metadata : name : python-app-1-1 namespace : argocd spec : project : default source : repoURL : https://github.com/Portfolio-jaime/python-app-1-1.git targetRevision : HEAD path : charts/python-app-1 helm : valueFiles : - values-prod.yaml destination : server : https://kubernetes.default.svc namespace : python-app-1-1 syncPolicy : automated : prune : true selfHeal : true Multi-Environment Setup \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 # Crear aplicaciones para todos los entornos environments =( \"dev\" \"staging\" \"prod\" ) for env in \" ${ environments [@] } \" ; do argocd app create python-app-1-1- $env \\ --repo https://github.com/Portfolio-jaime/python-app-1-1.git \\ --path charts/python-app-1 \\ --helm-set-file values- $env .yaml \\ --dest-server https://kubernetes.default.svc \\ --dest-namespace python-app-1-1- $env \\ --sync-policy automated done \ud83d\udcca Monitoreo y Observabilidad \u00b6 ServiceMonitor para Prometheus \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 apiVersion : monitoring.coreos.com/v1 kind : ServiceMonitor metadata : name : python-app-1-1 namespace : python-app-1-1 spec : selector : matchLabels : app : python-app-1-1 endpoints : - port : http path : /metrics interval : 30s Dashboards de Grafana \u00b6 Application Metrics : Response time, error rate, throughput Infrastructure : CPU, Memory, Network usage Business : Request patterns, user activity Alertas Cr\u00edticas \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 groups : - name : python-app-1-1.rules rules : - alert : PythonApp1Down expr : up{job=\"python-app-1-1\"} == 0 for : 5m labels : severity : critical annotations : summary : \"Python App 1 is down\" - alert : PythonApp1HighErrorRate expr : rate(flask_http_request_exceptions_total[5m]) > 0.1 for : 2m labels : severity : warning annotations : summary : \"High error rate in Python App 1\" \ud83d\udd27 Desarrollo Local \u00b6 Requisitos \u00b6 Python 3.9+ Docker Helm 3.x kubectl Setup R\u00e1pido \u00b6 1 2 3 4 5 6 7 8 9 # Clonar y setup git clone https://github.com/Portfolio-jaime/python-app-1-1.git cd python-app-1-1 # Ejecutar con Docker Compose docker-compose up -d # Verificar funcionamiento curl http://localhost:5000/api/v1/healthz Testing Local con Helm \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 # Validar templates helm template python-app-1-1 ./charts/python-app-1 \\ -f charts/python-app-1/values-dev.yaml # Dry run helm install python-app-1-1-test ./charts/python-app-1 \\ -f charts/python-app-1/values-dev.yaml \\ --dry-run --debug # Deploy local helm install python-app-1-1-local ./charts/python-app-1 \\ -f charts/python-app-1/values-dev.yaml \ud83d\udc1b Troubleshooting \u00b6 Problemas Comunes \u00b6 Helm Release Fails \u00b6 1 2 3 4 5 6 7 8 # Verificar status del release helm status python-app-1-1 # Ver historia helm history python-app-1-1 # Rollback si es necesario helm rollback python-app-1-1 1 ArgoCD Sync Issues \u00b6 1 2 3 4 5 6 7 8 # Verificar estado argocd app get python-app-1-1 # Forzar sync argocd app sync python-app-1-1 --force # Ver diff argocd app diff python-app-1-1 Application Not Responding \u00b6 1 2 3 4 5 6 7 8 # Port forward para debug kubectl port-forward svc/python-app-1-1 5000 :80 -n python-app-1-1 # Verificar logs kubectl logs -l app = python-app-1-1 -n python-app-1-1 --tail = 100 # Verificar health checks kubectl describe pod -l app = python-app-1-1 -n python-app-1-1 \ud83d\ude80 CI/CD Pipeline \u00b6 GitHub Actions Integration \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 name : Python App 1 Pipeline on : push : branches : [ main , develop ] jobs : build-and-deploy : runs-on : ubuntu-latest steps : - name : Build Docker Image run : docker build -t python-app-1-1:${{ github.sha }} . - name : Update Helm Values run : | yq eval '.image.tag = \"${{ github.sha }}\"' -i charts/python-app-1/values.yaml - name : Commit Changes run : | git add charts/python-app-1/values.yaml git commit -m \"Update image tag to ${{ github.sha }}\" git push Automated Testing \u00b6 1 2 3 4 5 6 7 8 # Unit tests python -m pytest src/tests/ # Integration tests helm test python-app-1-1 # Security scanning trivy image python-app-1-1:latest \ud83d\udcc8 M\u00e9tricas de Rendimiento \u00b6 SLIs (Service Level Indicators) \u00b6 Availability : > 99.9% Response Time : < 200ms (P95) Error Rate : < 0.1% Throughput : > 1000 RPS Capacity Planning \u00b6 CPU : 200m requests, 500m limits Memory : 256Mi requests, 512Mi limits Replicas : Min 2, Max 10 (HPA) Aplicaci\u00f3n Python Flask v1 - Portfolio DevOps","title":"Home"},{"location":"#python-flask-application-version-1","text":"Aplicaci\u00f3n web Flask con despliegue automatizado usando Helm Charts y ArgoCD.","title":"Python Flask Application (Version 1)"},{"location":"#descripcion","text":"Esta es una versi\u00f3n alternativa de la aplicaci\u00f3n Python Flask, configurada con: Helm Charts : Para gesti\u00f3n de configuraciones ArgoCD : Para despliegue GitOps M\u00faltiples entornos : Dev, Staging, Production Monitoreo : Integraci\u00f3n con Prometheus y Grafana","title":"\ud83c\udfaf Descripci\u00f3n"},{"location":"#api-endpoints","text":"","title":"\ud83d\udccb API Endpoints"},{"location":"#get-apiv1info","text":"Endpoint que devuelve informaci\u00f3n del sistema y timestamp actual. Funcionalidad: - Muestra fecha y hora actual - Hostname del contenedor/pod - Mensaje de confirmaci\u00f3n - Informaci\u00f3n de deployment Respuesta esperada: 1 2 3 4 5 6 { \"time\" : \"02:30:45PM on August 25, 2025\" , \"hostname\" : \"python-app-1-1-pod-abc123\" , \"message\" : \"You are doing great, little human! <3\" , \"deployed_on\" : \"kubernetes\" }","title":"GET /api/v1/info"},{"location":"#get-apiv1healthz","text":"Health check endpoint para Kubernetes liveness y readiness probes. Funcionalidad: - Verifica que la aplicaci\u00f3n est\u00e9 funcionando - Usado por Kubernetes para health checks - Endpoint cr\u00edtico para disponibilidad Respuesta esperada: 1 2 3 { \"status\" : \"up\" }","title":"GET /api/v1/healthz"},{"location":"#acceso-a-la-aplicacion","text":"","title":"\ud83d\ude80 Acceso a la Aplicaci\u00f3n"},{"location":"#urls-de-entornos","text":"Development : python-app-1-1-dev.test.com Staging : python-app-1-1-staging.test.com Production : python-app-1-1.test.com","title":"URLs de Entornos"},{"location":"#ejemplos-de-uso","text":"1 2 3 4 5 6 7 8 # Test del health check curl https://python-app-1-1.test.com/api/v1/healthz # Obtener informaci\u00f3n del sistema curl https://python-app-1-1.test.com/api/v1/info # Con headers JSON curl -H \"Accept: application/json\" https://python-app-1-1.test.com/api/v1/info | jq","title":"Ejemplos de Uso"},{"location":"#configuracion-con-helm","text":"","title":"\u2699\ufe0f Configuraci\u00f3n con Helm"},{"location":"#estructura-de-charts","text":"1 2 3 4 5 6 7 8 9 10 11 charts/ \u251c\u2500\u2500 python-app-1/ \u2502 \u251c\u2500\u2500 Chart.yaml \u2502 \u251c\u2500\u2500 values.yaml \u2502 \u2514\u2500\u2500 templates/ \u2502 \u251c\u2500\u2500 deployment.yaml \u2502 \u251c\u2500\u2500 service.yaml \u2502 \u251c\u2500\u2500 ingress.yaml \u2502 \u2514\u2500\u2500 _helpers.tpl \u2514\u2500\u2500 argocd/ \u2514\u2500\u2500 values-argo.yaml","title":"Estructura de Charts"},{"location":"#values-por-entorno","text":"","title":"Values por Entorno"},{"location":"#development","text":"1 2 3 4 5 6 7 8 9 replicaCount : 1 image : tag : \"dev\" resources : requests : cpu : 100m memory : 128Mi ingress : host : python-app-1-1-dev.test.com","title":"Development"},{"location":"#production","text":"1 2 3 4 5 6 7 8 9 10 11 12 replicaCount : 3 image : tag : \"latest\" resources : requests : cpu : 200m memory : 256Mi limits : cpu : 500m memory : 512Mi ingress : host : python-app-1-1.test.com","title":"Production"},{"location":"#despliegue-con-helm","text":"1 2 3 4 5 6 7 8 9 10 # Instalar en desarrollo helm install python-app-1-1-dev ./charts/python-app-1 \\ -f charts/python-app-1/values-dev.yaml \\ -n python-app-1-1-dev \\ --create-namespace # Upgrade en producci\u00f3n helm upgrade python-app-1-1 ./charts/python-app-1 \\ -f charts/python-app-1/values-prod.yaml \\ -n python-app-1-1-prod","title":"Despliegue con Helm"},{"location":"#gitops-con-argocd","text":"","title":"\ud83d\udd04 GitOps con ArgoCD"},{"location":"#configuracion-de-aplicacion-argocd","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 apiVersion : argoproj.io/v1alpha1 kind : Application metadata : name : python-app-1-1 namespace : argocd spec : project : default source : repoURL : https://github.com/Portfolio-jaime/python-app-1-1.git targetRevision : HEAD path : charts/python-app-1 helm : valueFiles : - values-prod.yaml destination : server : https://kubernetes.default.svc namespace : python-app-1-1 syncPolicy : automated : prune : true selfHeal : true","title":"Configuraci\u00f3n de Aplicaci\u00f3n ArgoCD"},{"location":"#multi-environment-setup","text":"1 2 3 4 5 6 7 8 9 10 11 12 # Crear aplicaciones para todos los entornos environments =( \"dev\" \"staging\" \"prod\" ) for env in \" ${ environments [@] } \" ; do argocd app create python-app-1-1- $env \\ --repo https://github.com/Portfolio-jaime/python-app-1-1.git \\ --path charts/python-app-1 \\ --helm-set-file values- $env .yaml \\ --dest-server https://kubernetes.default.svc \\ --dest-namespace python-app-1-1- $env \\ --sync-policy automated done","title":"Multi-Environment Setup"},{"location":"#monitoreo-y-observabilidad","text":"","title":"\ud83d\udcca Monitoreo y Observabilidad"},{"location":"#servicemonitor-para-prometheus","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 apiVersion : monitoring.coreos.com/v1 kind : ServiceMonitor metadata : name : python-app-1-1 namespace : python-app-1-1 spec : selector : matchLabels : app : python-app-1-1 endpoints : - port : http path : /metrics interval : 30s","title":"ServiceMonitor para Prometheus"},{"location":"#dashboards-de-grafana","text":"Application Metrics : Response time, error rate, throughput Infrastructure : CPU, Memory, Network usage Business : Request patterns, user activity","title":"Dashboards de Grafana"},{"location":"#alertas-criticas","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 groups : - name : python-app-1-1.rules rules : - alert : PythonApp1Down expr : up{job=\"python-app-1-1\"} == 0 for : 5m labels : severity : critical annotations : summary : \"Python App 1 is down\" - alert : PythonApp1HighErrorRate expr : rate(flask_http_request_exceptions_total[5m]) > 0.1 for : 2m labels : severity : warning annotations : summary : \"High error rate in Python App 1\"","title":"Alertas Cr\u00edticas"},{"location":"#desarrollo-local","text":"","title":"\ud83d\udd27 Desarrollo Local"},{"location":"#requisitos","text":"Python 3.9+ Docker Helm 3.x kubectl","title":"Requisitos"},{"location":"#setup-rapido","text":"1 2 3 4 5 6 7 8 9 # Clonar y setup git clone https://github.com/Portfolio-jaime/python-app-1-1.git cd python-app-1-1 # Ejecutar con Docker Compose docker-compose up -d # Verificar funcionamiento curl http://localhost:5000/api/v1/healthz","title":"Setup R\u00e1pido"},{"location":"#testing-local-con-helm","text":"1 2 3 4 5 6 7 8 9 10 11 12 # Validar templates helm template python-app-1-1 ./charts/python-app-1 \\ -f charts/python-app-1/values-dev.yaml # Dry run helm install python-app-1-1-test ./charts/python-app-1 \\ -f charts/python-app-1/values-dev.yaml \\ --dry-run --debug # Deploy local helm install python-app-1-1-local ./charts/python-app-1 \\ -f charts/python-app-1/values-dev.yaml","title":"Testing Local con Helm"},{"location":"#troubleshooting","text":"","title":"\ud83d\udc1b Troubleshooting"},{"location":"#problemas-comunes","text":"","title":"Problemas Comunes"},{"location":"#helm-release-fails","text":"1 2 3 4 5 6 7 8 # Verificar status del release helm status python-app-1-1 # Ver historia helm history python-app-1-1 # Rollback si es necesario helm rollback python-app-1-1 1","title":"Helm Release Fails"},{"location":"#argocd-sync-issues","text":"1 2 3 4 5 6 7 8 # Verificar estado argocd app get python-app-1-1 # Forzar sync argocd app sync python-app-1-1 --force # Ver diff argocd app diff python-app-1-1","title":"ArgoCD Sync Issues"},{"location":"#application-not-responding","text":"1 2 3 4 5 6 7 8 # Port forward para debug kubectl port-forward svc/python-app-1-1 5000 :80 -n python-app-1-1 # Verificar logs kubectl logs -l app = python-app-1-1 -n python-app-1-1 --tail = 100 # Verificar health checks kubectl describe pod -l app = python-app-1-1 -n python-app-1-1","title":"Application Not Responding"},{"location":"#cicd-pipeline","text":"","title":"\ud83d\ude80 CI/CD Pipeline"},{"location":"#github-actions-integration","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 name : Python App 1 Pipeline on : push : branches : [ main , develop ] jobs : build-and-deploy : runs-on : ubuntu-latest steps : - name : Build Docker Image run : docker build -t python-app-1-1:${{ github.sha }} . - name : Update Helm Values run : | yq eval '.image.tag = \"${{ github.sha }}\"' -i charts/python-app-1/values.yaml - name : Commit Changes run : | git add charts/python-app-1/values.yaml git commit -m \"Update image tag to ${{ github.sha }}\" git push","title":"GitHub Actions Integration"},{"location":"#automated-testing","text":"1 2 3 4 5 6 7 8 # Unit tests python -m pytest src/tests/ # Integration tests helm test python-app-1-1 # Security scanning trivy image python-app-1-1:latest","title":"Automated Testing"},{"location":"#metricas-de-rendimiento","text":"","title":"\ud83d\udcc8 M\u00e9tricas de Rendimiento"},{"location":"#slis-service-level-indicators","text":"Availability : > 99.9% Response Time : < 200ms (P95) Error Rate : < 0.1% Throughput : > 1000 RPS","title":"SLIs (Service Level Indicators)"},{"location":"#capacity-planning","text":"CPU : 200m requests, 500m limits Memory : 256Mi requests, 512Mi limits Replicas : Min 2, Max 10 (HPA) Aplicaci\u00f3n Python Flask v1 - Portfolio DevOps","title":"Capacity Planning"}]}